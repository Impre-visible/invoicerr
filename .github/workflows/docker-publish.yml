name: Publish Docker Image to GitHub Container Registry

on:
  release:
    types: [ "created" ]
  push:
    branches:
      - test/workflow

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      repo-name-lower: ${{ steps.set-vars.outputs.repo-name-lower }}
      image-tag: ${{ steps.set-vars.outputs.image-tag }}
      cache-ref: ${{ steps.set-vars.outputs.cache-ref }}
    steps:
      - name: Set repo name, image tag and cache ref
        id: set-vars
        run: |
          REPO_NAME_LOWER=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')

          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            IMAGE_TAG=${GITHUB_REF#refs/tags/}
            CACHE_REF=release
          elif [[ "${GITHUB_REF}" == refs/heads/test/workflow ]]; then
            IMAGE_TAG=test-workflow
            CACHE_REF=test-workflow
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            SAFE_BRANCH_NAME=${BRANCH_NAME//\//-}
            IMAGE_TAG=${SAFE_BRANCH_NAME}
            CACHE_REF=branch-${SAFE_BRANCH_NAME}
          fi

          echo "repo-name-lower=$REPO_NAME_LOWER" >> $GITHUB_OUTPUT
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "cache-ref=$CACHE_REF" >> $GITHUB_OUTPUT

      - name: Display cache configuration
        run: |
          echo "ðŸš€ Cache configuration:"
          echo "  Repo: ${{ steps.set-vars.outputs.repo-name-lower }}"
          echo "  Image tag: ${{ steps.set-vars.outputs.image-tag }}"
          echo "  Cache ref: ${{ steps.set-vars.outputs.cache-ref }}"
          echo "  Git ref: $GITHUB_REF"

  build-amd64:
    needs: setup-env
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
              max-parallelism = 8

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ needs.setup-env.outputs.repo-name-lower }}:${{ needs.setup-env.outputs.image-tag }}
          platforms: linux/amd64
          cache-from: type=gha,mode=max,scope=${{ needs.setup-env.outputs.cache-ref }}
          cache-to: type=gha,mode=max,scope=${{ needs.setup-env.outputs.cache-ref }}

  build-arm64:
    needs: setup-env
    runs-on: ubuntu-22.04-arm
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --oci-worker-no-process-sandbox=false
          driver-opts: image=moby/buildkit:latest

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ needs.setup-env.outputs.repo-name-lower }}:${{ needs.setup-env.outputs.image-tag }}
          platforms: linux/arm64
          cache-from: type=gha,mode=max,scope=${{ needs.setup-env.outputs.cache-ref }}
          cache-to: type=gha,mode=max,scope=${{ needs.setup-env.outputs.cache-ref }}

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest
        run: |
          docker manifest create ghcr.io/${{ needs.setup-env.outputs.repo-name-lower }}:${{ needs.setup-env.outputs.image-tag }} \
            ghcr.io/${{ needs.setup-env.outputs.repo-name-lower }}:${{ needs.setup-env.outputs.image-tag }}
          docker manifest push ghcr.io/${{ needs.setup-env.outputs.repo-name-lower }}:${{ needs.setup-env.outputs.image-tag }}

      - name: Display build summary
        run: |
          echo "âœ… Build completed successfully!"
          echo "  Image pushed: ${{ needs.setup-env.outputs.repo-name-lower }}:${{ needs.setup-env.outputs.image-tag }}"
          echo "  Cache scope used: ${{ needs.setup-env.outputs.cache-ref }}"
