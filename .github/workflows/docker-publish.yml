name: Publish Docker Image to GitHub Container Registry

on:
  release:
    types: [ "created" ]
  push:
    branches:
      - test/workflow

jobs:
  build-multiarch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set repo name, image tag and cache ref
        id: set-vars
        run: |
          REPO_NAME_LOWER=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          GIT_REF="${GITHUB_REF:-${{ github.ref }}}"

          if [[ "$GIT_REF" == refs/tags/* ]]; then
            IMAGE_TAG=${GIT_REF#refs/tags/}
            CACHE_REF=release
          elif [[ "$GIT_REF" == refs/heads/test/workflow ]]; then
            IMAGE_TAG=test-workflow
            CACHE_REF=test-workflow
          else
            BRANCH_NAME=${GIT_REF#refs/heads/}
            SAFE_BRANCH_NAME=${BRANCH_NAME//\//-}
            IMAGE_TAG=${SAFE_BRANCH_NAME}
            CACHE_REF=branch-${SAFE_BRANCH_NAME}
          fi

          echo "repo-name-lower=$REPO_NAME_LOWER" >> $GITHUB_OUTPUT
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "cache-ref=$CACHE_REF" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
              max-parallelism = 8

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.set-vars.outputs.repo-name-lower }}:${{ steps.set-vars.outputs.image-tag }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,mode=max,scope=${{ steps.set-vars.outputs.cache-ref }}
          cache-to: type=gha,mode=max,scope=${{ steps.set-vars.outputs.cache-ref }}

      - name: Display build summary
        run: |
          echo "âœ… Build completed successfully!"
          echo "  Image pushed: ${{ steps.set-vars.outputs.repo-name-lower }}:${{ steps.set-vars.outputs.image-tag }}"
          echo "  Cache scope used: ${{ steps.set-vars.outputs.cache-ref }}"
          echo "  Platforms built: linux/amd64, linux/arm64"